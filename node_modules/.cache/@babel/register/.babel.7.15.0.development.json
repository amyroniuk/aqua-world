{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/admin/Projects/profu/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/admin/Projects/profu\",\"filename\":\"/home/admin/Projects/profu/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/admin/Projects/profu\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/admin/Projects/profu/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/admin/Projects/profu",
      "filename": "/home/admin/Projects/profu/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/admin/Projects/profu",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/admin/Projects/profu/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/admin/Projects/profu/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/admin/Projects/profu/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import { parse } from '@fast-csv/parse';\nconst stream = parse({\n  headers: true\n}).on('error', error => console.error(error)).on('data', row => console.log(row)).on('end', rowCount => console.log(`Parsed ${rowCount} rows`));\nstream.write('header1,header2\\n');\nstream.write('col1,col2');\nstream.end();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBhcnNlIiwic3RyZWFtIiwiaGVhZGVycyIsIm9uIiwiZXJyb3IiLCJjb25zb2xlIiwicm93IiwibG9nIiwicm93Q291bnQiLCJ3cml0ZSIsImVuZCJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsS0FBVCxRQUFzQixpQkFBdEI7QUFFQSxNQUFNQyxNQUFNLEdBQUdELEtBQUssQ0FBQztBQUFFRSxFQUFBQSxPQUFPLEVBQUU7QUFBWCxDQUFELENBQUwsQ0FDVkMsRUFEVSxDQUNQLE9BRE8sRUFDRUMsS0FBSyxJQUFJQyxPQUFPLENBQUNELEtBQVIsQ0FBY0EsS0FBZCxDQURYLEVBRVZELEVBRlUsQ0FFUCxNQUZPLEVBRUNHLEdBQUcsSUFBSUQsT0FBTyxDQUFDRSxHQUFSLENBQVlELEdBQVosQ0FGUixFQUdWSCxFQUhVLENBR1AsS0FITyxFQUdDSyxRQUFELElBQWNILE9BQU8sQ0FBQ0UsR0FBUixDQUFhLFVBQVNDLFFBQVMsT0FBL0IsQ0FIZCxDQUFmO0FBS0FQLE1BQU0sQ0FBQ1EsS0FBUCxDQUFhLG1CQUFiO0FBQ0FSLE1BQU0sQ0FBQ1EsS0FBUCxDQUFhLFdBQWI7QUFDQVIsTUFBTSxDQUFDUyxHQUFQIiwic291cmNlUm9vdCI6Ii9ob21lL2FkbWluL1Byb2plY3RzL3Byb2Z1LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlIH0gZnJvbSAnQGZhc3QtY3N2L3BhcnNlJztcblxuY29uc3Qgc3RyZWFtID0gcGFyc2UoeyBoZWFkZXJzOiB0cnVlIH0pXG4gICAgLm9uKCdlcnJvcicsIGVycm9yID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKVxuICAgIC5vbignZGF0YScsIHJvdyA9PiBjb25zb2xlLmxvZyhyb3cpKVxuICAgIC5vbignZW5kJywgKHJvd0NvdW50KSA9PiBjb25zb2xlLmxvZyhgUGFyc2VkICR7cm93Q291bnR9IHJvd3NgKSk7XG5cbnN0cmVhbS53cml0ZSgnaGVhZGVyMSxoZWFkZXIyXFxuJyk7XG5zdHJlYW0ud3JpdGUoJ2NvbDEsY29sMicpO1xuc3RyZWFtLmVuZCgpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "parse",
        "stream",
        "headers",
        "on",
        "error",
        "console",
        "row",
        "log",
        "rowCount",
        "write",
        "end"
      ],
      "mappings": "AAAA,SAASA,KAAT,QAAsB,iBAAtB;AAEA,MAAMC,MAAM,GAAGD,KAAK,CAAC;AAAEE,EAAAA,OAAO,EAAE;AAAX,CAAD,CAAL,CACVC,EADU,CACP,OADO,EACEC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CADX,EAEVD,EAFU,CAEP,MAFO,EAECG,GAAG,IAAID,OAAO,CAACE,GAAR,CAAYD,GAAZ,CAFR,EAGVH,EAHU,CAGP,KAHO,EAGCK,QAAD,IAAcH,OAAO,CAACE,GAAR,CAAa,UAASC,QAAS,OAA/B,CAHd,CAAf;AAKAP,MAAM,CAACQ,KAAP,CAAa,mBAAb;AACAR,MAAM,CAACQ,KAAP,CAAa,WAAb;AACAR,MAAM,CAACS,GAAP",
      "sourceRoot": "/home/admin/Projects/profu/",
      "sourcesContent": [
        "import { parse } from '@fast-csv/parse';\n\nconst stream = parse({ headers: true })\n    .on('error', error => console.error(error))\n    .on('data', row => console.log(row))\n    .on('end', (rowCount) => console.log(`Parsed ${rowCount} rows`));\n\nstream.write('header1,header2\\n');\nstream.write('col1,col2');\nstream.end();"
      ]
    },
    "sourceType": "module",
    "mtime": 1628887755869
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/admin/Projects/profu/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/admin/Projects/profu\",\"filename\":\"/home/admin/Projects/profu/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/admin/Projects/profu\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/admin/Projects/profu/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/admin/Projects/profu",
      "filename": "/home/admin/Projects/profu/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/admin/Projects/profu",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/admin/Projects/profu/index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/admin/Projects/profu/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/admin/Projects/profu/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _parse = require(\"@fast-csv/parse\");\n\nvar _xml2js = require(\"xml2js\");\n\nvar _js2xmlparser = require(\"js2xmlparser\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar readCSV = function readCSV(path) {\n  return new Promise(function (resolve, reject) {\n    var csv_input = _fs[\"default\"].readFileSync(path);\n\n    var rows = [];\n    var stream = (0, _parse.parse)({\n      headers: true\n    }).on('error', function (error) {\n      return reject(error);\n    }).on('data', function (row) {\n      rows.push(row);\n    }).on('end', function (rowCount) {\n      console.log(\"Parsed \".concat(rowCount, \" rows\"));\n      resolve(rows);\n    });\n    stream.write(csv_input.toString());\n    stream.end();\n  });\n};\n\nvar updateXML = function updateXML(path, prices) {\n  return new Promise(function (resolve, reject) {\n    var xml_input = _fs[\"default\"].readFileSync(path);\n\n    (0, _xml2js.parseString)(xml_input, function (err, result) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      console.dir(result.root.offer[0]); // result.root.offer.forEach(element => {\n      //     console.log(element.price)\n      // });\n\n      var new_xml_2 = {\n        offer: [{\n          \"@\": {\n            id: '5492',\n            available: 'true'\n          },\n          url: [{\n            \"#\": \"https://aqua-world.com.ua/catalog/dushevye_kabiny_poddony/dushevye_kabiny/seriya_walk_in/peregorodka_dusha_walk_in/\"\n          }],\n          picture: [{\n            \"#\": \"https://aqua-world.com.ua/pictures/5492.jpg\"\n          }, {\n            \"#\": \"https://aqua-world.com.ua/catalog/dushevye_kabiny_poddony/dushevye_kabiny/seriya_walk_in/peregorodka_dusha_walk_in/\"\n          }],\n          param: [{\n            \"@\": {\n              name: \"Производитель\"\n            },\n            \"#\": 'Aqua-World'\n          }]\n        }]\n      };\n      var new_xml = {\n        offer: []\n      };\n      result.root.offer.forEach(function (offer) {\n        var next_offer = {};\n        Object.keys(offer).forEach(function (key) {\n          if (key === '$') {\n            next_offer['@'] = offer[key];\n          } else if (key === 'param') {\n            next_offer[key] = offer[key].map(function (value) {\n              var param = {};\n\n              if (value.$) {\n                param['@'] = value.$;\n              }\n\n              if (value._) {\n                param['#'] = value._;\n              }\n\n              return param;\n            });\n          } else {\n            next_offer[key] = offer[key].map(function (value) {\n              return {\n                '#': value\n              };\n            });\n          }\n        });\n        next_offer.price[0]['#'] = prices[offer.$.id];\n        new_xml.offer.push(next_offer);\n      });\n      var xmlText = (0, _js2xmlparser.parse)('root', new_xml, {\n        declaration: {\n          include: true,\n          encoding: \"UTF-8\"\n        }\n      });\n      resolve(xmlText);\n    });\n  });\n};\n\nvar csvPath = _path[\"default\"].join(__dirname, 'doc', 'test.csv');\n\nvar xmlPath = _path[\"default\"].join(__dirname, 'doc', 'test.xml');\n\nvar xmlNewPath = _path[\"default\"].join(__dirname, 'doc', 'test-new.xml');\n\nreadCSV(csvPath).then(function (rows) {\n  return rows.reduce(function (acc, item) {\n    acc[item.offer_id] = item.price;\n    return acc;\n  }, {});\n}).then(function (prices) {\n  return updateXML(xmlPath, prices);\n}).then(function (xml) {\n  console.log(xml);\n\n  _fs[\"default\"].writeFileSync(xmlNewPath, xml);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "readCSV",
        "path",
        "Promise",
        "resolve",
        "reject",
        "csv_input",
        "fs",
        "readFileSync",
        "rows",
        "stream",
        "headers",
        "on",
        "error",
        "row",
        "push",
        "rowCount",
        "console",
        "log",
        "write",
        "toString",
        "end",
        "updateXML",
        "prices",
        "xml_input",
        "err",
        "result",
        "dir",
        "root",
        "offer",
        "new_xml_2",
        "id",
        "available",
        "url",
        "picture",
        "param",
        "name",
        "new_xml",
        "forEach",
        "next_offer",
        "Object",
        "keys",
        "key",
        "map",
        "value",
        "$",
        "_",
        "price",
        "xmlText",
        "declaration",
        "include",
        "encoding",
        "csvPath",
        "join",
        "__dirname",
        "xmlPath",
        "xmlNewPath",
        "then",
        "reduce",
        "acc",
        "item",
        "offer_id",
        "xml",
        "writeFileSync"
      ],
      "mappings": "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",
      "sourceRoot": "/home/admin/Projects/profu/",
      "sourcesContent": [
        "import { parse } from '@fast-csv/parse';\nimport { parseString } from 'xml2js';\nimport {parse as parseJsToXML} from \"js2xmlparser\";\nimport path from 'path';\nimport fs from 'fs';\n\n\nconst readCSV = (path) => {\n    return new Promise((resolve, reject) => {\n        const csv_input = fs.readFileSync(path);\n        const rows = [];\n        const stream = parse({ headers: true })\n            .on('error', error => reject(error))\n            .on('data', row => {\n                rows.push(row);\n            })\n            .on('end', (rowCount) => {\n                console.log(`Parsed ${rowCount} rows`);\n                resolve(rows);\n            });\n\n        stream.write(csv_input.toString());\n        stream.end();\n    });\n}\n\nconst updateXML = (path, prices) => {\n    return new Promise((resolve, reject) => {\n\n        const xml_input = fs.readFileSync(path);\nparseString(xml_input, function (err, result) {\n    if (err) {\n        reject(err);\n        return;\n    }\n    console.dir(result.root.offer[0]);\n    // result.root.offer.forEach(element => {\n    //     console.log(element.price)\n    // });\n    const new_xml_2 = {\n        offer: [\n            {\n                \"@\": {\n                    id: '5492', available: 'true'\n                },\n                url: [\n                    {\n                        \"#\": \"https://aqua-world.com.ua/catalog/dushevye_kabiny_poddony/dushevye_kabiny/seriya_walk_in/peregorodka_dusha_walk_in/\",\n                    }\n                ],\n                picture: [\n                    {\n                        \"#\": \"https://aqua-world.com.ua/pictures/5492.jpg\",\n                    },\n                    {\n                        \"#\": \"https://aqua-world.com.ua/catalog/dushevye_kabiny_poddony/dushevye_kabiny/seriya_walk_in/peregorodka_dusha_walk_in/\",\n                    },\n                ],\n                param: [\n                    {\n                        \"@\": { name: \"Производитель\"},\n                        \"#\": 'Aqua-World',\n                    }\n                ],\n            },\n        ]\n    };\n    const new_xml = {\n        offer: []\n    }\n    result.root.offer.forEach((offer) => {\n        const next_offer = {};\n        Object.keys(offer).forEach((key) => {\n            if (key === '$') {\n                next_offer['@'] = offer[key];\n            } else if (key === 'param') {\n                next_offer[key] = offer[key].map((value) => {\n                    let param = {};\n                    if (value.$) {\n                        param['@'] = value.$;\n                    }\n                    if (value._) {\n                        param['#'] = value._;\n                    }\n                    return param;\n                });\n            } else {\n                next_offer[key] = offer[key].map((value) => {\n                    return {\n                        '#': value,\n                    }\n                });\n            }\n        });\n        next_offer.price[0]['#'] = prices[offer.$.id];\n        new_xml.offer.push(next_offer);\n    });\n    const xmlText = parseJsToXML('root', new_xml, { declaration: {\n        include: true,\n        encoding: \"UTF-8\"\n    } });\n    resolve(xmlText);\n});\n\n    });\n};\n\n\n\n\n\nconst csvPath = path.join(__dirname, 'doc', 'test.csv');\nconst xmlPath = path.join(__dirname, 'doc', 'test.xml');\nconst xmlNewPath = path.join(__dirname, 'doc', 'test-new.xml');\n\nreadCSV(csvPath)\n.then((rows) => {\n    return rows.reduce((acc, item) => {\n        acc[item.offer_id] = item.price;\n        return acc;\n    }, {});\n})\n.then((prices) => {\n    return updateXML(xmlPath, prices);\n    \n})\n.then((xml) => {\n    console.log(xml);\n    fs.writeFileSync(xmlNewPath, xml);\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1629408430254
  }
}