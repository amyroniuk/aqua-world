{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/admin/Projects/profu/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/admin/Projects/profu\",\"filename\":\"/home/admin/Projects/profu/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/admin/Projects/profu\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/admin/Projects/profu/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/admin/Projects/profu",
      "filename": "/home/admin/Projects/profu/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/admin/Projects/profu",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/admin/Projects/profu/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/admin/Projects/profu/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/admin/Projects/profu/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import { parse } from '@fast-csv/parse';\nconst stream = parse({\n  headers: true\n}).on('error', error => console.error(error)).on('data', row => console.log(row)).on('end', rowCount => console.log(`Parsed ${rowCount} rows`));\nstream.write('header1,header2\\n');\nstream.write('col1,col2');\nstream.end();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBhcnNlIiwic3RyZWFtIiwiaGVhZGVycyIsIm9uIiwiZXJyb3IiLCJjb25zb2xlIiwicm93IiwibG9nIiwicm93Q291bnQiLCJ3cml0ZSIsImVuZCJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsS0FBVCxRQUFzQixpQkFBdEI7QUFFQSxNQUFNQyxNQUFNLEdBQUdELEtBQUssQ0FBQztBQUFFRSxFQUFBQSxPQUFPLEVBQUU7QUFBWCxDQUFELENBQUwsQ0FDVkMsRUFEVSxDQUNQLE9BRE8sRUFDRUMsS0FBSyxJQUFJQyxPQUFPLENBQUNELEtBQVIsQ0FBY0EsS0FBZCxDQURYLEVBRVZELEVBRlUsQ0FFUCxNQUZPLEVBRUNHLEdBQUcsSUFBSUQsT0FBTyxDQUFDRSxHQUFSLENBQVlELEdBQVosQ0FGUixFQUdWSCxFQUhVLENBR1AsS0FITyxFQUdDSyxRQUFELElBQWNILE9BQU8sQ0FBQ0UsR0FBUixDQUFhLFVBQVNDLFFBQVMsT0FBL0IsQ0FIZCxDQUFmO0FBS0FQLE1BQU0sQ0FBQ1EsS0FBUCxDQUFhLG1CQUFiO0FBQ0FSLE1BQU0sQ0FBQ1EsS0FBUCxDQUFhLFdBQWI7QUFDQVIsTUFBTSxDQUFDUyxHQUFQIiwic291cmNlUm9vdCI6Ii9ob21lL2FkbWluL1Byb2plY3RzL3Byb2Z1LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlIH0gZnJvbSAnQGZhc3QtY3N2L3BhcnNlJztcblxuY29uc3Qgc3RyZWFtID0gcGFyc2UoeyBoZWFkZXJzOiB0cnVlIH0pXG4gICAgLm9uKCdlcnJvcicsIGVycm9yID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKVxuICAgIC5vbignZGF0YScsIHJvdyA9PiBjb25zb2xlLmxvZyhyb3cpKVxuICAgIC5vbignZW5kJywgKHJvd0NvdW50KSA9PiBjb25zb2xlLmxvZyhgUGFyc2VkICR7cm93Q291bnR9IHJvd3NgKSk7XG5cbnN0cmVhbS53cml0ZSgnaGVhZGVyMSxoZWFkZXIyXFxuJyk7XG5zdHJlYW0ud3JpdGUoJ2NvbDEsY29sMicpO1xuc3RyZWFtLmVuZCgpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "parse",
        "stream",
        "headers",
        "on",
        "error",
        "console",
        "row",
        "log",
        "rowCount",
        "write",
        "end"
      ],
      "mappings": "AAAA,SAASA,KAAT,QAAsB,iBAAtB;AAEA,MAAMC,MAAM,GAAGD,KAAK,CAAC;AAAEE,EAAAA,OAAO,EAAE;AAAX,CAAD,CAAL,CACVC,EADU,CACP,OADO,EACEC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CADX,EAEVD,EAFU,CAEP,MAFO,EAECG,GAAG,IAAID,OAAO,CAACE,GAAR,CAAYD,GAAZ,CAFR,EAGVH,EAHU,CAGP,KAHO,EAGCK,QAAD,IAAcH,OAAO,CAACE,GAAR,CAAa,UAASC,QAAS,OAA/B,CAHd,CAAf;AAKAP,MAAM,CAACQ,KAAP,CAAa,mBAAb;AACAR,MAAM,CAACQ,KAAP,CAAa,WAAb;AACAR,MAAM,CAACS,GAAP",
      "sourceRoot": "/home/admin/Projects/profu/",
      "sourcesContent": [
        "import { parse } from '@fast-csv/parse';\n\nconst stream = parse({ headers: true })\n    .on('error', error => console.error(error))\n    .on('data', row => console.log(row))\n    .on('end', (rowCount) => console.log(`Parsed ${rowCount} rows`));\n\nstream.write('header1,header2\\n');\nstream.write('col1,col2');\nstream.end();"
      ]
    },
    "sourceType": "module",
    "mtime": 1628887755869
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/admin/Projects/profu/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/admin/Projects/profu\",\"filename\":\"/home/admin/Projects/profu/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/admin/Projects/profu\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/admin/Projects/profu/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/admin/Projects/profu",
      "filename": "/home/admin/Projects/profu/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/admin/Projects/profu",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/admin/Projects/profu/index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/admin/Projects/profu/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/admin/Projects/profu/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _parse = require(\"@fast-csv/parse\");\n\nvar _xml2js = require(\"xml2js\");\n\nvar _js2xmlparser = require(\"js2xmlparser\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _yargs = _interopRequireDefault(require(\"yargs/yargs\"));\n\nvar _helpers = require(\"yargs/helpers\");\n\nvar argv = (0, _yargs[\"default\"])((0, _helpers.hideBin)(process.argv)).argv;\nvar cwd = process.cwd();\n\nvar csvPath = _path[\"default\"].resolve(cwd, argv.csv);\n\nvar xmlInPath = _path[\"default\"].resolve(cwd, argv.xml);\n\nvar xmlOutPath = _path[\"default\"].resolve(cwd, argv.out || \"output.xml\");\n\nvar readCSV = function readCSV(path) {\n  return new Promise(function (resolve, reject) {\n    var csv_input = _fs[\"default\"].readFileSync(path);\n\n    var rows = [];\n    var stream = (0, _parse.parse)({\n      headers: true,\n      delimiter: \";\"\n    }).on(\"error\", function (error) {\n      return reject(error);\n    }).on(\"data\", function (row) {\n      rows.push(row);\n    }).on(\"end\", function (rowCount) {\n      // console.log(`Parsed ${rowCount} rows`);\n      resolve(rows);\n    });\n    stream.write(csv_input.toString());\n    stream.end();\n  });\n};\n\nvar updateXML = function updateXML(path, prices) {\n  return new Promise(function (resolve, reject) {\n    var xml_input = _fs[\"default\"].readFileSync(path);\n\n    (0, _xml2js.parseString)(xml_input, function (err, result) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      var new_xml = {\n        offer: []\n      };\n      result.offers.offer.forEach(function (offer) {\n        var next_offer = {};\n        Object.keys(offer).forEach(function (key) {\n          if (key === \"$\") {\n            next_offer[\"@\"] = offer[\"$\"];\n          } else if (key === \"param\") {\n            next_offer[\"param\"] = offer.param.map(function (value) {\n              var param = {};\n\n              if (value.$) {\n                param[\"@\"] = value.$;\n              }\n\n              if (value._) {\n                param[\"#\"] = value._;\n              }\n\n              return param;\n            });\n          } else {\n            next_offer[key] = offer[key].map(function (value) {\n              return {\n                \"#\": value\n              };\n            });\n          }\n        });\n        next_offer.price[0][\"#\"] = prices[offer.$.id] || \"\";\n        new_xml.offer.push(next_offer);\n      });\n      var xmlText = (0, _js2xmlparser.parse)(\"offers\", new_xml, {\n        declaration: {\n          include: true,\n          encoding: \"UTF-8\"\n        }\n      });\n      resolve(xmlText);\n    });\n  });\n};\n\nreadCSV(csvPath).then(function (rows) {\n  return rows.reduce(function (acc, item) {\n    acc[item.offer_id] = item.price;\n    return acc;\n  }, {});\n}).then(function (prices) {\n  return updateXML(xmlInPath, prices);\n}).then(function (xml) {\n  _fs[\"default\"].writeFileSync(xmlOutPath, xml);\n}).then(function () {\n  console.log(\"Saved output to \".concat(xmlOutPath));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "argv",
        "process",
        "cwd",
        "csvPath",
        "path",
        "resolve",
        "csv",
        "xmlInPath",
        "xml",
        "xmlOutPath",
        "out",
        "readCSV",
        "Promise",
        "reject",
        "csv_input",
        "fs",
        "readFileSync",
        "rows",
        "stream",
        "headers",
        "delimiter",
        "on",
        "error",
        "row",
        "push",
        "rowCount",
        "write",
        "toString",
        "end",
        "updateXML",
        "prices",
        "xml_input",
        "err",
        "result",
        "new_xml",
        "offer",
        "offers",
        "forEach",
        "next_offer",
        "Object",
        "keys",
        "key",
        "param",
        "map",
        "value",
        "$",
        "_",
        "price",
        "id",
        "xmlText",
        "declaration",
        "include",
        "encoding",
        "then",
        "reduce",
        "acc",
        "item",
        "offer_id",
        "writeFileSync",
        "console",
        "log"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,IAAI,GAAG,uBAAM,sBAAQC,OAAO,CAACD,IAAhB,CAAN,EAA6BA,IAA1C;AAEA,IAAME,GAAG,GAAGD,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,OAAO,GAAGC,iBAAKC,OAAL,CAAaH,GAAb,EAAkBF,IAAI,CAACM,GAAvB,CAAhB;;AACA,IAAMC,SAAS,GAAGH,iBAAKC,OAAL,CAAaH,GAAb,EAAkBF,IAAI,CAACQ,GAAvB,CAAlB;;AACA,IAAMC,UAAU,GAAGL,iBAAKC,OAAL,CAAaH,GAAb,EAAkBF,IAAI,CAACU,GAAL,IAAY,YAA9B,CAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACP,IAAD,EAAU;AACxB,SAAO,IAAIQ,OAAJ,CAAY,UAACP,OAAD,EAAUQ,MAAV,EAAqB;AACtC,QAAMC,SAAS,GAAGC,eAAGC,YAAH,CAAgBZ,IAAhB,CAAlB;;AACA,QAAMa,IAAI,GAAG,EAAb;AACA,QAAMC,MAAM,GAAG,kBAAM;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAAN,EACZC,EADY,CACT,OADS,EACA,UAACC,KAAD;AAAA,aAAWT,MAAM,CAACS,KAAD,CAAjB;AAAA,KADA,EAEZD,EAFY,CAET,MAFS,EAED,UAACE,GAAD,EAAS;AACnBN,MAAAA,IAAI,CAACO,IAAL,CAAUD,GAAV;AACD,KAJY,EAKZF,EALY,CAKT,KALS,EAKF,UAACI,QAAD,EAAc;AACvB;AACApB,MAAAA,OAAO,CAACY,IAAD,CAAP;AACD,KARY,CAAf;AAUAC,IAAAA,MAAM,CAACQ,KAAP,CAAaZ,SAAS,CAACa,QAAV,EAAb;AACAT,IAAAA,MAAM,CAACU,GAAP;AACD,GAfM,CAAP;AAgBD,CAjBD;;AAmBA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACzB,IAAD,EAAO0B,MAAP,EAAkB;AAClC,SAAO,IAAIlB,OAAJ,CAAY,UAACP,OAAD,EAAUQ,MAAV,EAAqB;AACtC,QAAMkB,SAAS,GAAGhB,eAAGC,YAAH,CAAgBZ,IAAhB,CAAlB;;AACA,6BAAY2B,SAAZ,EAAuB,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAC5C,UAAID,GAAJ,EAAS;AACPnB,QAAAA,MAAM,CAACmB,GAAD,CAAN;AACA;AACD;;AACD,UAAME,OAAO,GAAG;AACdC,QAAAA,KAAK,EAAE;AADO,OAAhB;AAGAF,MAAAA,MAAM,CAACG,MAAP,CAAcD,KAAd,CAAoBE,OAApB,CAA4B,UAACF,KAAD,EAAW;AACrC,YAAMG,UAAU,GAAG,EAAnB;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBE,OAAnB,CAA2B,UAACI,GAAD,EAAS;AAClC,cAAIA,GAAG,KAAK,GAAZ,EAAiB;AACfH,YAAAA,UAAU,CAAC,GAAD,CAAV,GAAkBH,KAAK,CAAC,GAAD,CAAvB;AACD,WAFD,MAEO,IAAIM,GAAG,KAAK,OAAZ,EAAqB;AAC1BH,YAAAA,UAAU,CAAC,OAAD,CAAV,GAAsBH,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAgB,UAACC,KAAD,EAAW;AAC/C,kBAAIF,KAAK,GAAG,EAAZ;;AACA,kBAAIE,KAAK,CAACC,CAAV,EAAa;AACXH,gBAAAA,KAAK,CAAC,GAAD,CAAL,GAAaE,KAAK,CAACC,CAAnB;AACD;;AACD,kBAAID,KAAK,CAACE,CAAV,EAAa;AACXJ,gBAAAA,KAAK,CAAC,GAAD,CAAL,GAAaE,KAAK,CAACE,CAAnB;AACD;;AACD,qBAAOJ,KAAP;AACD,aATqB,CAAtB;AAUD,WAXM,MAWA;AACLJ,YAAAA,UAAU,CAACG,GAAD,CAAV,GAAkBN,KAAK,CAACM,GAAD,CAAL,CAAWE,GAAX,CAAe,UAACC,KAAD,EAAW;AAC1C,qBAAO;AACL,qBAAKA;AADA,eAAP;AAGD,aAJiB,CAAlB;AAKD;AACF,SArBD;AAsBAN,QAAAA,UAAU,CAACS,KAAX,CAAiB,CAAjB,EAAoB,GAApB,IAA2BjB,MAAM,CAACK,KAAK,CAACU,CAAN,CAAQG,EAAT,CAAN,IAAsB,EAAjD;AACAd,QAAAA,OAAO,CAACC,KAAR,CAAcX,IAAd,CAAmBc,UAAnB;AACD,OA1BD;AA2BA,UAAMW,OAAO,GAAG,yBAAa,QAAb,EAAuBf,OAAvB,EAAgC;AAC9CgB,QAAAA,WAAW,EAAE;AACXC,UAAAA,OAAO,EAAE,IADE;AAEXC,UAAAA,QAAQ,EAAE;AAFC;AADiC,OAAhC,CAAhB;AAMA/C,MAAAA,OAAO,CAAC4C,OAAD,CAAP;AACD,KA1CD;AA2CD,GA7CM,CAAP;AA8CD,CA/CD;;AAiDAtC,OAAO,CAACR,OAAD,CAAP,CACGkD,IADH,CACQ,UAACpC,IAAD,EAAU;AACd,SAAOA,IAAI,CAACqC,MAAL,CAAY,UAACC,GAAD,EAAMC,IAAN,EAAe;AAChCD,IAAAA,GAAG,CAACC,IAAI,CAACC,QAAN,CAAH,GAAqBD,IAAI,CAACT,KAA1B;AACA,WAAOQ,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CANH,EAOGF,IAPH,CAOQ,UAACvB,MAAD,EAAY;AAChB,SAAOD,SAAS,CAACtB,SAAD,EAAYuB,MAAZ,CAAhB;AACD,CATH,EAUGuB,IAVH,CAUQ,UAAC7C,GAAD,EAAS;AACbO,iBAAG2C,aAAH,CAAiBjD,UAAjB,EAA6BD,GAA7B;AACD,CAZH,EAaG6C,IAbH,CAaQ,YAAM;AACVM,EAAAA,OAAO,CAACC,GAAR,2BAA+BnD,UAA/B;AACD,CAfH",
      "sourceRoot": "/home/admin/Projects/profu/",
      "sourcesContent": [
        "import { parse } from \"@fast-csv/parse\";\nimport { parseString } from \"xml2js\";\nimport { parse as parseJsToXML } from \"js2xmlparser\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport yargs from \"yargs/yargs\";\nimport { hideBin } from \"yargs/helpers\";\n\nconst argv = yargs(hideBin(process.argv)).argv;\n\nconst cwd = process.cwd();\nconst csvPath = path.resolve(cwd, argv.csv);\nconst xmlInPath = path.resolve(cwd, argv.xml);\nconst xmlOutPath = path.resolve(cwd, argv.out || \"output.xml\");\n\nconst readCSV = (path) => {\n  return new Promise((resolve, reject) => {\n    const csv_input = fs.readFileSync(path);\n    const rows = [];\n    const stream = parse({ headers: true, delimiter: \";\" })\n      .on(\"error\", (error) => reject(error))\n      .on(\"data\", (row) => {\n        rows.push(row);\n      })\n      .on(\"end\", (rowCount) => {\n        // console.log(`Parsed ${rowCount} rows`);\n        resolve(rows);\n      });\n\n    stream.write(csv_input.toString());\n    stream.end();\n  });\n};\n\nconst updateXML = (path, prices) => {\n  return new Promise((resolve, reject) => {\n    const xml_input = fs.readFileSync(path);\n    parseString(xml_input, function (err, result) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      const new_xml = {\n        offer: [],\n      };\n      result.offers.offer.forEach((offer) => {\n        const next_offer = {};\n        Object.keys(offer).forEach((key) => {\n          if (key === \"$\") {\n            next_offer[\"@\"] = offer[\"$\"];\n          } else if (key === \"param\") {\n            next_offer[\"param\"] = offer.param.map((value) => {\n              let param = {};\n              if (value.$) {\n                param[\"@\"] = value.$;\n              }\n              if (value._) {\n                param[\"#\"] = value._;\n              }\n              return param;\n            });\n          } else {\n            next_offer[key] = offer[key].map((value) => {\n              return {\n                \"#\": value,\n              };\n            });\n          }\n        });\n        next_offer.price[0][\"#\"] = prices[offer.$.id] || \"\";\n        new_xml.offer.push(next_offer);\n      });\n      const xmlText = parseJsToXML(\"offers\", new_xml, {\n        declaration: {\n          include: true,\n          encoding: \"UTF-8\",\n        },\n      });\n      resolve(xmlText);\n    });\n  });\n};\n\nreadCSV(csvPath)\n  .then((rows) => {\n    return rows.reduce((acc, item) => {\n      acc[item.offer_id] = item.price;\n      return acc;\n    }, {});\n  })\n  .then((prices) => {\n    return updateXML(xmlInPath, prices);\n  })\n  .then((xml) => {\n    fs.writeFileSync(xmlOutPath, xml);\n  })\n  .then(() => {\n    console.log(`Saved output to ${xmlOutPath}`);\n  });\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1629577506705
  }
}